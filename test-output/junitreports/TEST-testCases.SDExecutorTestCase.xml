<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="TRPL-PUN-0268" failures="0" tests="23" name="testCases.SDExecutorTestCase" time="78.067" errors="1" timestamp="2025-07-13T22:42:02 IST" skipped="22">
  <testcase classname="testCases.SDExecutorTestCase" name="Login" time="78.062">
    <error message="no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;//span[@id=&#039;lblQuestion1&#039;]&quot;}
  (Session info: chrome=138.0.7204.101)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &#039;3.141.0&#039;, revision: &#039;2ecb7d9a&#039;, time: &#039;2018-10-31T20:09:30&#039;
System info: host: &#039;TRPL-PUN-0268&#039;, ip: &#039;192.168.1.6&#039;, os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;23.0.1&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.101, chrome: {chromedriverVersion: 138.0.7204.92 (f079b9bc781e..., userDataDir: C:\Users\bilali\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63040}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ddcf8ff704af480028ac847f23e2f810
*** Element info: {Using=xpath, value=//span[@id=&#039;lblQuestion1&#039;]}" type="org.openqa.selenium.NoSuchElementException">
      <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[@id='lblQuestion1']"}
  (Session info: chrome=138.0.7204.101)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'TRPL-PUN-0268', ip: '192.168.1.6', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.101, chrome: {chromedriverVersion: 138.0.7204.92 (f079b9bc781e..., userDataDir: C:\Users\bilali\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63040}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ddcf8ff704af480028ac847f23e2f810
*** Element info: {Using=xpath, value=//span[@id='lblQuestion1']}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at login.LoginLocators.Question1(LoginLocators.java:1844)
at login.LoginMethods.UserLoginSDExecutor(LoginMethods.java:111)
at login.BasePage.initializationSDExecutor(BasePage.java:220)
at testCases.SDExecutorTestCase.Login(SDExecutorTestCase.java:61)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- Login -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="CountMatch" time="0.000">
    <skipped/>
  </testcase> <!-- CountMatch -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="PendingAction" time="0.001">
    <skipped/>
  </testcase> <!-- PendingAction -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="Overdue" time="0.000">
    <skipped/>
  </testcase> <!-- Overdue -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="Closed" time="0.001">
    <skipped/>
  </testcase> <!-- Closed -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="NoticeExportBtn" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeExportBtn -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="NoticeSearchBox" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeSearchBox -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="NoticeEditDownload" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeEditDownload -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="RegistrationCountMatch" time="0.000">
    <skipped/>
  </testcase> <!-- RegistrationCountMatch -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="RegistrationPendingAction" time="0.000">
    <skipped/>
  </testcase> <!-- RegistrationPendingAction -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="RegistrationOverdue" time="0.000">
    <skipped/>
  </testcase> <!-- RegistrationOverdue -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="RegistrationClosed" time="0.000">
    <skipped/>
  </testcase> <!-- RegistrationClosed -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="ExportBtn" time="0.000">
    <skipped/>
  </testcase> <!-- ExportBtn -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="SearchBox" time="0.000">
    <skipped/>
  </testcase> <!-- SearchBox -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="EditIcon" time="0.000">
    <skipped/>
  </testcase> <!-- EditIcon -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="ExistingLicenseCountMatch" time="0.000">
    <skipped/>
  </testcase> <!-- ExistingLicenseCountMatch -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="ExistingLicenseendingAction" time="0.001">
    <skipped/>
  </testcase> <!-- ExistingLicenseendingAction -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="ExistingLicenseOverdue" time="0.000">
    <skipped/>
  </testcase> <!-- ExistingLicenseOverdue -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="ExistingLicenseClosed" time="0.001">
    <skipped/>
  </testcase> <!-- ExistingLicenseClosed -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="ExsitingLicenseExport" time="0.000">
    <skipped/>
  </testcase> <!-- ExsitingLicenseExport -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="SearchBoxExistiongLicense" time="0.001">
    <skipped/>
  </testcase> <!-- SearchBoxExistiongLicense -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="ExistingLicenseViewIcon" time="0.000">
    <skipped/>
  </testcase> <!-- ExistingLicenseViewIcon -->
  <system-out/>
  <testcase classname="testCases.SDExecutorTestCase" name="ExistingLicenseDownload" time="0.000">
    <skipped/>
  </testcase> <!-- ExistingLicenseDownload -->
  <system-out/>
</testsuite> <!-- testCases.SDExecutorTestCase -->
